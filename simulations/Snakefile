configfile: 'config.yaml'

ALF_DIR = config['alf_dir']
N_SPECIES = config['number_of_species']
SEQ_LEN = config['segment_lenth']
N_MARKERS = config['number_of_segs']
REPS = config['repeats']
PAMS = config['pams']

SCRIPTS = config['scripts_dir']

from itertools import chain

rule all:
    input:
        leave_genomes = chain(*[expand('%s/l{seqlen}_m{ms}/run{rid}_p{pam_dist}_n%s/DB/SE%03d_dna.fa' %(ALF_DIR, N_SPECIES, i+1), 
                seqlen=SEQ_LEN, ms=N_MARKERS, n_species=N_SPECIES, rid=REPS,
                pam_dist=PAMS) for i in range(N_SPECIES)])

rule sample_genome:
    params:
        n_markers = '{ms}',
        seqlen = '{slen}',
        run_id = '{rid}',
    output:
        '%s/l{slen}_m{ms}/run{rid}.fna' %ALF_DIR
    shell:
        'mkdir -p %s/l{params.seqlen}_m{params.n_markers};' %ALF_DIR + 
        '%s/sample_genome.py -c 1 -l {params.seqlen} {params.n_markers} > {output}' %SCRIPTS


rule generate_param_file:
    input:
        '%s/l{slen}_m{ms}/run{rid}.fna' %ALF_DIR
    params:
        pam_dist = '{pam}'
    output:
        '%s/l{slen,\d+}_m{ms,\d+}/run{rid,\d+}_p{pam,\d+}_n%s.drw' %(ALF_DIR, N_SPECIES)
    shell:
        '%s/alf.generate_param_file.py -p {params.pam_dist} -n %s {input} > {output}' %(SCRIPTS, N_SPECIES)


rule run_alf:
    input: 
        '%s/l{slen}_m{ns}/run{rid}_p{pam_dist}_n%s.drw' %(ALF_DIR, N_SPECIES)
    output:
        ['%s/l{slen,\d+}_m{ns,\d+}/run{rid,\d+}_p{pam_dist,\d+}_n%s/DB/SE%03d_dna.fa' %(ALF_DIR, N_SPECIES, i+1) for i in range(N_SPECIES)]
    shell:
        '%s/alf.run.sh {input};' %SCRIPTS + 
        'i="{input}";'
        'if [ ! -e "{output[0]}" -a -d "${{i%.drw}}_1" ]; then' 
        '   rm -rf "${{i%.drw}}";'
        '   mv "${{i%.drw}}_1" "${{i%.drw}}";'
        'fi'
